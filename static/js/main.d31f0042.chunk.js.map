{"version":3,"sources":["redux/phone/phonebookActions.js","redux/phone/phoneOperations.js","components/ContactEditor.js","redux/phone/phoneSelectors.js","components/ContactListItem.js","components/ContactList.js","components/Filter.js","components/Section.js","components/App.js","redux/phone/phoneReducer.js","redux/store.js","index.js"],"names":["addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactsRequest","removeContactsSuccess","removeContactsError","changeFilter","axios","defaults","baseURL","addContact","name","number","dispatch","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","NotUnicName","allContacts","newName","find","contact","ContactEditor","state","handleChange","target","value","props","items","alert","setState","handleSubmit","e","preventDefault","onAddContact","this","onSubmit","htmlFor","type","onChange","className","Component","mapDispatchToProps","phoneOperations","connect","contacts","getContacts","getFilter","filter","getVisibleContacts","createSelector","toLowerCase","includes","getContactById","contactId","item","ownProps","phoneSelectors","onRemove","onClick","length","map","onChangeFilter","phoneSalectors","Section","children","App","onFetchContacts","createReducer","action","payload","newContact","combineReducers","store","configureStore","reducer","phoneReducer","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d31f0042.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const addContactsRequest = createAction(\"contacts/addRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addSuccess\");\nexport const addContactsError = createAction(\"contacts/addError\");\n\nexport const fetchContactsRequest = createAction(\"contacts/fetchRequest\");\nexport const fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nexport const fetchContactsError = createAction(\"contacts/fetchError\");\n\nexport const removeContactsRequest = createAction(\"contacts/removeRequest\");\nexport const removeContactsSuccess = createAction(\"contacts/removeSuccess\");\nexport const removeContactsError = createAction(\"contacts/removeError\");\n\nexport const changeFilter = createAction(\"phonebook/filter\");\n","import axios from \"axios\";\n\nimport {\n  addContactsError,\n  addContactsSuccess,\n  addContactsRequest,\n  fetchContactsRequest,\n  fetchContactsError,\n  fetchContactsSuccess,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n} from \"./phonebookActions\";\n\naxios.defaults.baseURL = \"http://localhost:2000\";\n\nconst addContact = ({ name, number }) => (dispatch) => {\n  dispatch(addContactsRequest());\n  axios\n    .post(\"/contacts\", {\n      name: name,\n      number: number,\n    })\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch((error) => dispatch(addContactsError(error)));\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(removeContactsRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(removeContactsSuccess(id)))\n    .catch((error) => dispatch(removeContactsError(error)));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, fetchContacts, removeContact };\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport phoneOperations from \"../redux/phone/phoneOperations\";\n\nconst NotUnicName = (allContacts, newName) => {\n  const findName = allContacts.find((contact) => contact.name === newName);\n  return findName;\n};\n\nclass ContactEditor extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    const find = NotUnicName(this.props.items, value);\n    if (find) {\n      alert(`${value} is already in contacts!!!`);\n    } else\n      this.setState({\n        [name]: value,\n      });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddContact(this.state);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <form onSubmit={this.handleSubmit}>\n          <label htmlFor=\"name\">\n            Name\n            <br />\n            <input\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n              name=\"name\"\n            />\n          </label>\n          <label htmlFor=\"number\">\n            Number\n            <br />\n            <input\n              type=\"text\"\n              value={number}\n              onChange={this.handleChange}\n              name=\"number\"\n            />\n          </label>\n          <button type=\"submit\" className=\"add_contact\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return state.contacts;\n};\n\nconst mapDispatchToProps = {\n  onAddContact: phoneOperations.addContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactEditor);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContacts = (state) => state.contacts.items;\n\nconst getFilter = (state) => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nconst getContactById = (state, contactId) => {\n  const contacts = getContacts(state);\n  return contacts.find((item) => item.id === contactId);\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getVisibleContacts, getFilter, getContacts, getContactById };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport phoneOperations from \"../redux/phone/phoneOperations\";\nimport phoneSelectors from \"../redux/phone/phoneSelectors\";\n\nconst ContactListItem = ({ name, number, onRemove }) => (\n  <li>\n    <span>\n      {name} {number}\n    </span>\n    <button type=\"button\" className=\"deleteBtn\" onClick={onRemove}>\n      x\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  ...phoneSelectors.getContactById(state, ownProps.id),\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onRemove: () => dispatch(phoneOperations.removeContact(ownProps.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport ContactListItem from \"./ContactListItem\";\nimport phoneSelectors from \"../redux/phone/phoneSelectors\";\n\nconst ContactList = ({ contacts }) => {\n  if (contacts.length > 0) {\n    return (\n      <ul>\n        {contacts.map(({ id }) => (\n          <ContactListItem key={id} id={id} />\n        ))}\n      </ul>\n    );\n  } else return null;\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: phoneSelectors.getVisibleContacts(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport { changeFilter } from \"../redux/phone/phonebookActions\";\nimport phoneSalectors from \"../redux/phone/phoneSelectors\";\n\nconst Filter = ({ contacts, value, onChangeFilter }) => {\n  if (contacts.length > 0) {\n    return (\n      <div>\n        <span>Find name</span>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => onChangeFilter(e.target.value)}\n        />\n      </div>\n    );\n  } else return null;\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  contacts: PropTypes.array.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n  value: phoneSalectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: changeFilter,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Section({ children }) {\n  return <section>{children}</section>;\n}\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport default Section;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport ContactEditor from \"./ContactEditor\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\nimport Section from \"./Section\";\nimport phoneOperations from \"../redux/phone/phoneOperations\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    return (\n      <Section>\n        <ContactEditor />\n        <h2>Contact</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onFetchContacts: phoneOperations.fetchContacts,\n};\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport {\n  addContactsSuccess,\n  changeFilter,\n  fetchContactsSuccess,\n  removeContactsSuccess,\n} from \"./phonebookActions\";\n\nconst onAddContact = (state, action) => {\n  const newContact = action.payload;\n  return [...state, newContact];\n};\n\nconst onRemoveContact = (state, action) =>\n  state.filter((contact) => contact.id !== action.payload);\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, action) => action.payload,\n  [addContactsSuccess]: onAddContact,\n  [removeContactsSuccess]: onRemoveContact,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport phoneReducer from \"./phone/phoneReducer\";\n\nconst store = configureStore({\n  reducer: { contacts: phoneReducer },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}